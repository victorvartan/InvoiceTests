// <auto-generated />
using System;
using InvoiceTest.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvoiceTest.DataAccess.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20181109214755_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvoiceTest.Models.Invoice", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Amount")
                        .HasColumnType("Money");

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateLastUpdated");

                    b.Property<string>("Identifier")
                        .HasMaxLength(400);

                    b.Property<Guid?>("LastUpdatedByUserId");

                    b.HasKey("Id");

                    b.HasIndex("Identifier")
                        .IsUnique()
                        .HasFilter("[Identifier] IS NOT NULL");

                    b.ToTable("Invoices");
                });

            modelBuilder.Entity("InvoiceTest.Models.InvoiceNote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateLastUpdated");

                    b.Property<Guid>("InvoiceId");

                    b.Property<Guid?>("LastUpdatedByUserId");

                    b.Property<string>("Text");

                    b.HasKey("Id");

                    b.HasIndex("InvoiceId");

                    b.ToTable("InvoiceNotes");
                });

            modelBuilder.Entity("InvoiceTest.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiKey")
                        .HasMaxLength(400);

                    b.Property<Guid>("CreatedByUserId");

                    b.Property<DateTime>("DateCreated");

                    b.Property<DateTime?>("DateLastUpdated");

                    b.Property<Guid?>("LastUpdatedByUserId");

                    b.Property<int>("Role");

                    b.HasKey("Id");

                    b.HasIndex("ApiKey")
                        .IsUnique()
                        .HasFilter("[ApiKey] IS NOT NULL");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvoiceTest.Models.InvoiceNote", b =>
                {
                    b.HasOne("InvoiceTest.Models.Invoice", "Invoice")
                        .WithMany("Notes")
                        .HasForeignKey("InvoiceId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
